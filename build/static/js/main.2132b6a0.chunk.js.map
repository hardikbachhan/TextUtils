{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","defaultProps","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","textWordCount","wordArr","split","filter","word","length","isTextEmpty","backgoundColor","heading","value","rows","onChange","event","newText","target","toUpperCase","showAlert","toLowerCase","result","replace","navigator","clipboard","writeText","join","Alert","height","alert","role","message","lower","charAt","slice","capitalize","Footer","year","Date","getFullYear","App","setMode","setAlert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2132b6a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.mode === \"light\" ? \"black\" : \"white\",\r\n    backgroundColor: props.mode === \"light\" ? \"white\" : \"#0c2b58\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n    >\r\n      <h2 className=\"my-3\">About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Analyze Your text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <p>\r\n                Textutils gives you a way to analyze your text quickly and\r\n                efficiently. Be it hard count, character count or anything in\r\n                between.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Free to use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <p>\r\n                TextUtils is a free character counter tool that provides instant\r\n                character count and word count statistics for a given text.\r\n                TextUtils reports the number of words and characters. Thus it is\r\n                suitable for writing text with word/ character limit.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser Campatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <p>\r\n                This word counter software works in any web browsers such as\r\n                Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to\r\n                count characters in facebook, blog, books, excel document, pdf\r\n                document, essays, etc.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAbout.propTypes = {\r\n  mode: PropTypes.string.isRequired,\r\n};\r\n\r\nAbout.defaultProps = {\r\n  mode: \"light\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {`Enable ${props.mode === \"light\" ? \"Dark\" : \"Light\"} mode`}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Title is here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n\r\n  const onLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n\r\n  const onPunctuationClick = () => {\r\n    const regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\r\n    const result = text.replace(regex, \"\");\r\n    setText(result);\r\n    props.showAlert(\"Puntuations removed!\", \"success\");\r\n  };\r\n\r\n  const onClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  };\r\n\r\n  const onUpChange = (event) => {\r\n    let newText = event.target.value;\r\n    setText(newText);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    const newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces removed!\", \"success\");\r\n  };\r\n\r\n  const textWordCount = () => {\r\n    let wordArr = text.split(/\\s+/);\r\n    wordArr = wordArr.filter((word) => word.length !== 0);\r\n    return wordArr.length;\r\n  };\r\n\r\n  let isTextEmpty = text.length === 0 ? true : false;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          backgoundColor: props.mode === \"light\" ? \"white\" : \"#031a3c\",\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2 className=\"mb-3\">{props.heading}</h2>\r\n        <div className=\"my-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"black\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n            value={text}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            onChange={onUpChange}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={onUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={onLoClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={onPunctuationClick}\r\n        >\r\n          Remove Punctuation\r\n        </button>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={onClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className={`btn btn-primary mx-1 my-1 ${\r\n            isTextEmpty ? \"disabled\" : \"\"\r\n          }`}\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-5\"\r\n        style={{\r\n          backgoundColor: props.mode === \"light\" ? \"white\" : \"#031a3c\",\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>Your Text Details: </h2>\r\n        <p>\r\n          {textWordCount()} words and {text.length} characters.\r\n        </p>\r\n        <p>{0.008 * textWordCount()} minutes read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview....\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTextForm.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n};\r\n\r\nTextForm.defaultProps = {\r\n  heading: \"Text goes below:\",\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (message) => {\r\n    const lower = message.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          {capitalize(props.alert.type)}: <strong>{props.alert.message}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n\r\nAlert.propTypes = {\r\n  alert: PropTypes.object.isRequired,\r\n};\r\n\r\nAlert.defaultProps = {\r\n  mode: null,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Footer(props) {\r\n  let year = new Date().getFullYear();\r\n\r\n  let myStyle = {\r\n    color: props.mode === \"light\" ? \"black\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div className={`row text-center footer bg-${props.mode}`} style={myStyle}>\r\n      <p className=\"mt-4\">Made with ❤️ in Delhi, India.</p>\r\n      <p className=\"mb-3\">Hardik Bachhan @ {year}.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\nFooter.propTypes = {\r\n  mode: PropTypes.string.isRequired,\r\n};\r\n\r\nFooter.defaultProps = {\r\n  mode: \"light\",\r\n};\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm.js\";\nimport Alert from \"./components/Alert\";\nimport Footer from \"./components/Footer\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#031a3c\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                heading=\"Try TextUtils - Word Counter | Character Counter | Remove Extra Spaces\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n        </div>\n        <Footer mode={mode} />\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}